"use client";

import React, { useState } from 'react';
import DashboardHeader from '@/components/dashboard/DashboardHeader';
import Sidebar from '@/components/dashboard/Sidebar';

const SettingsPage = () => {
  const [sidebarOpen, setSidebarOpen] = useState(false);
  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);
  const [activeTab, setActiveTab] = useState('profile');

  // Form states
  const [profile, setProfile] = useState({
    fullName: 'Nguy·ªÖn VƒÉn An',
    email: 'nguyenvanan@email.com',
    phone: '0123456789',
    address: 'H√† N·ªôi, Vi·ªát Nam',
    jobTitle: 'Frontend Developer',
    experience: '3 nƒÉm',
    skills: 'React, TypeScript, Node.js'
  });

  const [notifications, setNotifications] = useState({
    emailJob: true,
    emailNews: false,
    smsJob: true,
    pushJob: true,
    pushNews: false
  });

  const [privacy, setPrivacy] = useState({
    profilePublic: true,
    showEmail: false,
    showPhone: false,
    allowMessages: true,
    allowCalls: false
  });

  const tabs = [
    { id: 'profile', label: 'Th√¥ng tin c√° nh√¢n', icon: 'üë§' },
    { id: 'security', label: 'B·∫£o m·∫≠t', icon: 'üîí' },
    { id: 'notifications', label: 'Th√¥ng b√°o', icon: 'üîî' },
    { id: 'privacy', label: 'Quy·ªÅn ri√™ng t∆∞', icon: 'üõ°Ô∏è' },
    { id: 'preferences', label: 'T√πy ch·ªçn', icon: '‚öôÔ∏è' }
  ];

  const handleProfileChange = (field: string, value: string) => {
    setProfile(prev => ({ ...prev, [field]: value }));
  };

  const handleNotificationChange = (field: string, value: boolean) => {
    setNotifications(prev => ({ ...prev, [field]: value }));
  };

  const handlePrivacyChange = (field: string, value: boolean) => {
    setPrivacy(prev => ({ ...prev, [field]: value }));
  };

  return (
    <div className="bg-gray-50 min-h-screen">
      <DashboardHeader 
        onMenuClick={() => setSidebarOpen(!sidebarOpen)} 
        onToggleSidebar={() => setSidebarCollapsed(!sidebarCollapsed)}
      />
      
      <div className="flex">
        <Sidebar 
          isOpen={sidebarOpen} 
          onClose={() => setSidebarOpen(false)}
          isCollapsed={sidebarCollapsed}
        />
        
        <main className={`flex-1 transition-all duration-300 ${
          sidebarCollapsed ? 'lg:ml-16' : 'lg:ml-64'
        }`}>
          <div className="px-4 py-4">
            <div className="max-w-7xl mx-auto">
              <div className="mb-8">
                <h1 className="text-3xl font-bold text-gray-900">C√†i ƒë·∫∑t t√†i kho·∫£n</h1>
                <p className="text-gray-600 mt-2">Qu·∫£n l√Ω th√¥ng tin c√° nh√¢n v√† t√πy ch·ªçn t√†i kho·∫£n</p>
              </div>

              <div className="flex flex-col lg:flex-row gap-8">
                {/* Sidebar Menu */}
                <div className="lg:w-64">
                  <nav className="space-y-2">
                    {tabs.map((tab) => (
                      <button
                        key={tab.id}
                        onClick={() => setActiveTab(tab.id)}
                        className={`w-full flex items-center space-x-3 px-3 py-2 rounded-lg text-left transition-colors ${
                          activeTab === tab.id
                            ? 'bg-green-100 text-green-700 border border-green-200'
                            : 'text-gray-600 hover:bg-gray-100'
                        }`}
                      >
                        <span className="text-lg">{tab.icon}</span>
                        <span className="font-medium">{tab.label}</span>
                      </button>
                    ))}
                  </nav>
                </div>

                {/* Content Area */}
                <div className="flex-1">
                  <div className="bg-white rounded-lg shadow">
                    {/* Profile Tab */}
                    {activeTab === 'profile' && (
                      <div className="p-6">
                        <h2 className="text-xl font-semibold text-gray-900 mb-6">Th√¥ng tin c√° nh√¢n</h2>
                        
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                          <div>
                            <label className="block text-sm font-medium text-gray-700 mb-2">H·ªç v√† t√™n</label>
                            <input
                              type="text"
                              value={profile.fullName}
                              onChange={(e) => handleProfileChange('fullName', e.target.value)}
                              className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-green-500 focus:border-transparent"
                            />
                          </div>

                          <div>
                            <label className="block text-sm font-medium text-gray-700 mb-2">Email</label>
                            <input
                              type="email"
                              value={profile.email}
                              onChange={(e) => handleProfileChange('email', e.target.value)}
                              className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-green-500 focus:border-transparent"
                            />
                          </div>

                          <div>
                            <label className="block text-sm font-medium text-gray-700 mb-2">S·ªë ƒëi·ªán tho·∫°i</label>
                            <input
                              type="tel"
                              value={profile.phone}
                              onChange={(e) => handleProfileChange('phone', e.target.value)}
                              className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-green-500 focus:border-transparent"
                            />
                          </div>

                          <div>
                            <label className="block text-sm font-medium text-gray-700 mb-2">ƒê·ªãa ch·ªâ</label>
                            <input
                              type="text"
                              value={profile.address}
                              onChange={(e) => handleProfileChange('address', e.target.value)}
                              className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-green-500 focus:border-transparent"
                            />
                          </div>

                          <div>
                            <label className="block text-sm font-medium text-gray-700 mb-2">V·ªã tr√≠ c√¥ng vi·ªác</label>
                            <input
                              type="text"
                              value={profile.jobTitle}
                              onChange={(e) => handleProfileChange('jobTitle', e.target.value)}
                              className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-green-500 focus:border-transparent"
                            />
                          </div>

                          <div>
                            <label className="block text-sm font-medium text-gray-700 mb-2">Kinh nghi·ªám</label>
                            <select
                              value={profile.experience}
                              onChange={(e) => handleProfileChange('experience', e.target.value)}
                              className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-green-500 focus:border-transparent"
                            >
                              <option value="Ch∆∞a c√≥ kinh nghi·ªám">Ch∆∞a c√≥ kinh nghi·ªám</option>
                              <option value="D∆∞·ªõi 1 nƒÉm">D∆∞·ªõi 1 nƒÉm</option>
                              <option value="1-3 nƒÉm">1-3 nƒÉm</option>
                              <option value="3-5 nƒÉm">3-5 nƒÉm</option>
                              <option value="5-10 nƒÉm">5-10 nƒÉm</option>
                              <option value="Tr√™n 10 nƒÉm">Tr√™n 10 nƒÉm</option>
                            </select>
                          </div>
                        </div>

                        <div className="mt-6">
                          <label className="block text-sm font-medium text-gray-700 mb-2">K·ªπ nƒÉng</label>
                          <textarea
                            value={profile.skills}
                            onChange={(e) => handleProfileChange('skills', e.target.value)}
                            rows={3}
                            className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-green-500 focus:border-transparent"
                            placeholder="Nh·∫≠p c√°c k·ªπ nƒÉng c·ªßa b·∫°n, ph√¢n t√°ch b·∫±ng d·∫•u ph·∫©y"
                          />
                        </div>

                        <div className="mt-6 flex justify-end">
                          <button className="bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-lg font-medium transition-colors">
                            L∆∞u thay ƒë·ªïi
                          </button>
                        </div>
                      </div>
                    )}

                    {/* Security Tab */}
                    {activeTab === 'security' && (
                      <div className="p-6">
                        <h2 className="text-xl font-semibold text-gray-900 mb-6">B·∫£o m·∫≠t t√†i kho·∫£n</h2>
                        
                        <div className="space-y-6">
                          <div className="border border-gray-200 rounded-lg p-4">
                            <h3 className="text-lg font-medium text-gray-900 mb-2">ƒê·ªïi m·∫≠t kh·∫©u</h3>
                            <p className="text-gray-600 mb-4">C·∫≠p nh·∫≠t m·∫≠t kh·∫©u ƒë·ªÉ b·∫£o v·ªá t√†i kho·∫£n</p>
                            
                            <div className="space-y-4">
                              <div>
                                <label className="block text-sm font-medium text-gray-700 mb-2">M·∫≠t kh·∫©u hi·ªán t·∫°i</label>
                                <input
                                  type="password"
                                  className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-green-500 focus:border-transparent"
                                />
                              </div>
                              <div>
                                <label className="block text-sm font-medium text-gray-700 mb-2">M·∫≠t kh·∫©u m·ªõi</label>
                                <input
                                  type="password"
                                  className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-green-500 focus:border-transparent"
                                />
                              </div>
                              <div>
                                <label className="block text-sm font-medium text-gray-700 mb-2">X√°c nh·∫≠n m·∫≠t kh·∫©u m·ªõi</label>
                                <input
                                  type="password"
                                  className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-green-500 focus:border-transparent"
                                />
                              </div>
                            </div>
                            
                            <button className="mt-4 bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                              C·∫≠p nh·∫≠t m·∫≠t kh·∫©u
                            </button>
                          </div>

                          <div className="border border-gray-200 rounded-lg p-4">
                            <h3 className="text-lg font-medium text-gray-900 mb-2">X√°c th·ª±c hai y·∫øu t·ªë (2FA)</h3>
                            <p className="text-gray-600 mb-4">TƒÉng c∆∞·ªùng b·∫£o m·∫≠t b·∫±ng x√°c th·ª±c hai y·∫øu t·ªë</p>
                            
                            <div className="flex items-center justify-between">
                              <div>
                                <p className="font-medium text-gray-900">Tr·∫°ng th√°i: <span className="text-red-600">Ch∆∞a k√≠ch ho·∫°t</span></p>
                                <p className="text-gray-600 text-sm">B·∫£o v·ªá t√†i kho·∫£n v·ªõi l·ªõp b·∫£o m·∫≠t b·ªï sung</p>
                              </div>
                              <button className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                                K√≠ch ho·∫°t 2FA
                              </button>
                            </div>
                          </div>

                          <div className="border border-gray-200 rounded-lg p-4">
                            <h3 className="text-lg font-medium text-gray-900 mb-2">Phi√™n ƒëƒÉng nh·∫≠p</h3>
                            <p className="text-gray-600 mb-4">Qu·∫£n l√Ω c√°c thi·∫øt b·ªã ƒë√£ ƒëƒÉng nh·∫≠p</p>
                            
                            <div className="space-y-3">
                              <div className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                                <div>
                                  <p className="font-medium text-gray-900">Windows PC - Chrome</p>
                                  <p className="text-gray-600 text-sm">H√† N·ªôi, Vi·ªát Nam ‚Ä¢ Ho·∫°t ƒë·ªông hi·ªán t·∫°i</p>
                                </div>
                                <span className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Hi·ªán t·∫°i</span>
                              </div>
                              
                              <div className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                                <div>
                                  <p className="font-medium text-gray-900">iPhone - Safari</p>
                                  <p className="text-gray-600 text-sm">H√† N·ªôi, Vi·ªát Nam ‚Ä¢ 2 gi·ªù tr∆∞·ªõc</p>
                                </div>
                                <button className="text-red-600 hover:text-red-700 text-sm font-medium">ƒêƒÉng xu·∫•t</button>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    )}

                    {/* Notifications Tab */}
                    {activeTab === 'notifications' && (
                      <div className="p-6">
                        <h2 className="text-xl font-semibold text-gray-900 mb-6">C√†i ƒë·∫∑t th√¥ng b√°o</h2>
                        
                        <div className="space-y-6">
                          <div>
                            <h3 className="text-lg font-medium text-gray-900 mb-4">Email</h3>
                            <div className="space-y-3">
                              <div className="flex items-center justify-between">
                                <div>
                                  <p className="font-medium text-gray-900">Th√¥ng b√°o vi·ªác l√†m</p>
                                  <p className="text-gray-600 text-sm">Nh·∫≠n email v·ªÅ c∆° h·ªôi vi·ªác l√†m ph√π h·ª£p</p>
                                </div>
                                <label className="relative inline-flex items-center cursor-pointer">
                                  <input
                                    type="checkbox"
                                    checked={notifications.emailJob}
                                    onChange={(e) => handleNotificationChange('emailJob', e.target.checked)}
                                    className="sr-only peer"
                                  />
                                  <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-green-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-green-600"></div>
                                </label>
                              </div>
                              
                              <div className="flex items-center justify-between">
                                <div>
                                  <p className="font-medium text-gray-900">Tin t·ª©c v√† c·∫≠p nh·∫≠t</p>
                                  <p className="text-gray-600 text-sm">Nh·∫≠n th√¥ng tin v·ªÅ t√≠nh nƒÉng m·ªõi v√† tin t·ª©c</p>
                                </div>
                                <label className="relative inline-flex items-center cursor-pointer">
                                  <input
                                    type="checkbox"
                                    checked={notifications.emailNews}
                                    onChange={(e) => handleNotificationChange('emailNews', e.target.checked)}
                                    className="sr-only peer"
                                  />
                                  <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-green-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-green-600"></div>
                                </label>
                              </div>
                            </div>
                          </div>

                          <div>
                            <h3 className="text-lg font-medium text-gray-900 mb-4">SMS</h3>
                            <div className="space-y-3">
                              <div className="flex items-center justify-between">
                                <div>
                                  <p className="font-medium text-gray-900">Th√¥ng b√°o vi·ªác l√†m kh·∫©n c·∫•p</p>
                                  <p className="text-gray-600 text-sm">SMS cho vi·ªác l√†m kh·ªõp 100% v·ªõi y√™u c·∫ßu</p>
                                </div>
                                <label className="relative inline-flex items-center cursor-pointer">
                                  <input
                                    type="checkbox"
                                    checked={notifications.smsJob}
                                    onChange={(e) => handleNotificationChange('smsJob', e.target.checked)}
                                    className="sr-only peer"
                                  />
                                  <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-green-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-green-600"></div>
                                </label>
                              </div>
                            </div>
                          </div>

                          <div>
                            <h3 className="text-lg font-medium text-gray-900 mb-4">Push Notification</h3>
                            <div className="space-y-3">
                              <div className="flex items-center justify-between">
                                <div>
                                  <p className="font-medium text-gray-900">Vi·ªác l√†m m·ªõi</p>
                                  <p className="text-gray-600 text-sm">Th√¥ng b√°o ngay khi c√≥ vi·ªác l√†m ph√π h·ª£p</p>
                                </div>
                                <label className="relative inline-flex items-center cursor-pointer">
                                  <input
                                    type="checkbox"
                                    checked={notifications.pushJob}
                                    onChange={(e) => handleNotificationChange('pushJob', e.target.checked)}
                                    className="sr-only peer"
                                  />
                                  <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-green-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-green-600"></div>
                                </label>
                              </div>
                              
                              <div className="flex items-center justify-between">
                                <div>
                                  <p className="font-medium text-gray-900">Tin t·ª©c</p>
                                  <p className="text-gray-600 text-sm">Th√¥ng b√°o v·ªÅ tin t·ª©c v√† c·∫≠p nh·∫≠t</p>
                                </div>
                                <label className="relative inline-flex items-center cursor-pointer">
                                  <input
                                    type="checkbox"
                                    checked={notifications.pushNews}
                                    onChange={(e) => handleNotificationChange('pushNews', e.target.checked)}
                                    className="sr-only peer"
                                  />
                                  <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-green-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-green-600"></div>
                                </label>
                              </div>
                            </div>
                          </div>
                        </div>
                        
                        <div className="mt-6 flex justify-end">
                          <button className="bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-lg font-medium transition-colors">
                            L∆∞u c√†i ƒë·∫∑t
                          </button>
                        </div>
                      </div>
                    )}

                    {/* Privacy Tab */}
                    {activeTab === 'privacy' && (
                      <div className="p-6">
                        <h2 className="text-xl font-semibold text-gray-900 mb-6">Quy·ªÅn ri√™ng t∆∞</h2>
                        
                        <div className="space-y-6">
                          <div className="border border-gray-200 rounded-lg p-4">
                            <h3 className="text-lg font-medium text-gray-900 mb-4">Hi·ªÉn th·ªã h·ªì s∆°</h3>
                            <div className="space-y-3">
                              <div className="flex items-center justify-between">
                                <div>
                                  <p className="font-medium text-gray-900">H·ªì s∆° c√¥ng khai</p>
                                  <p className="text-gray-600 text-sm">Cho ph√©p nh√† tuy·ªÉn d·ª•ng t√¨m th·∫•y h·ªì s∆° c·ªßa b·∫°n</p>
                                </div>
                                <label className="relative inline-flex items-center cursor-pointer">
                                  <input
                                    type="checkbox"
                                    checked={privacy.profilePublic}
                                    onChange={(e) => handlePrivacyChange('profilePublic', e.target.checked)}
                                    className="sr-only peer"
                                  />
                                  <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-green-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-green-600"></div>
                                </label>
                              </div>
                              
                              <div className="flex items-center justify-between">
                                <div>
                                  <p className="font-medium text-gray-900">Hi·ªÉn th·ªã email</p>
                                  <p className="text-gray-600 text-sm">Cho ph√©p nh√† tuy·ªÉn d·ª•ng xem email c·ªßa b·∫°n</p>
                                </div>
                                <label className="relative inline-flex items-center cursor-pointer">
                                  <input
                                    type="checkbox"
                                    checked={privacy.showEmail}
                                    onChange={(e) => handlePrivacyChange('showEmail', e.target.checked)}
                                    className="sr-only peer"
                                  />
                                  <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-green-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-green-600"></div>
                                </label>
                              </div>
                              
                              <div className="flex items-center justify-between">
                                <div>
                                  <p className="font-medium text-gray-900">Hi·ªÉn th·ªã s·ªë ƒëi·ªán tho·∫°i</p>
                                  <p className="text-gray-600 text-sm">Cho ph√©p nh√† tuy·ªÉn d·ª•ng xem s·ªë ƒëi·ªán tho·∫°i</p>
                                </div>
                                <label className="relative inline-flex items-center cursor-pointer">
                                  <input
                                    type="checkbox"
                                    checked={privacy.showPhone}
                                    onChange={(e) => handlePrivacyChange('showPhone', e.target.checked)}
                                    className="sr-only peer"
                                  />
                                  <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-green-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-green-600"></div>
                                </label>
                              </div>
                            </div>
                          </div>

                          <div className="border border-gray-200 rounded-lg p-4">
                            <h3 className="text-lg font-medium text-gray-900 mb-4">Li√™n h·ªá</h3>
                            <div className="space-y-3">
                              <div className="flex items-center justify-between">
                                <div>
                                  <p className="font-medium text-gray-900">Cho ph√©p nh·∫Øn tin</p>
                                  <p className="text-gray-600 text-sm">Nh√† tuy·ªÉn d·ª•ng c√≥ th·ªÉ g·ª≠i tin nh·∫Øn cho b·∫°n</p>
                                </div>
                                <label className="relative inline-flex items-center cursor-pointer">
                                  <input
                                    type="checkbox"
                                    checked={privacy.allowMessages}
                                    onChange={(e) => handlePrivacyChange('allowMessages', e.target.checked)}
                                    className="sr-only peer"
                                  />
                                  <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-green-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-green-600"></div>
                                </label>
                              </div>
                              
                              <div className="flex items-center justify-between">
                                <div>
                                  <p className="font-medium text-gray-900">Cho ph√©p g·ªçi ƒëi·ªán</p>
                                  <p className="text-gray-600 text-sm">Nh√† tuy·ªÉn d·ª•ng c√≥ th·ªÉ g·ªçi ƒëi·ªán cho b·∫°n</p>
                                </div>
                                <label className="relative inline-flex items-center cursor-pointer">
                                  <input
                                    type="checkbox"
                                    checked={privacy.allowCalls}
                                    onChange={(e) => handlePrivacyChange('allowCalls', e.target.checked)}
                                    className="sr-only peer"
                                  />
                                  <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-green-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-green-600"></div>
                                </label>
                              </div>
                            </div>
                          </div>
                        </div>
                        
                        <div className="mt-6 flex justify-end">
                          <button className="bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-lg font-medium transition-colors">
                            L∆∞u c√†i ƒë·∫∑t
                          </button>
                        </div>
                      </div>
                    )}

                    {/* Preferences Tab */}
                    {activeTab === 'preferences' && (
                      <div className="p-6">
                        <h2 className="text-xl font-semibold text-gray-900 mb-6">T√πy ch·ªçn h·ªá th·ªëng</h2>
                        
                        <div className="space-y-6">
                          <div className="border border-gray-200 rounded-lg p-4">
                            <h3 className="text-lg font-medium text-gray-900 mb-4">Giao di·ªán</h3>
                            <div className="space-y-4">
                              <div>
                                <label className="block text-sm font-medium text-gray-700 mb-2">Ng√¥n ng·ªØ</label>
                                <select className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-green-500 focus:border-transparent">
                                  <option value="vi">Ti·∫øng Vi·ªát</option>
                                  <option value="en">English</option>
                                </select>
                              </div>
                              
                              <div>
                                <label className="block text-sm font-medium text-gray-700 mb-2">M√∫i gi·ªù</label>
                                <select className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-green-500 focus:border-transparent">
                                  <option value="Asia/Ho_Chi_Minh">GMT+7 (Vi·ªát Nam)</option>
                                  <option value="Asia/Bangkok">GMT+7 (Bangkok)</option>
                                  <option value="Asia/Singapore">GMT+8 (Singapore)</option>
                                </select>
                              </div>
                            </div>
                          </div>

                          <div className="border border-gray-200 rounded-lg p-4">
                            <h3 className="text-lg font-medium text-gray-900 mb-4">T·ª± ƒë·ªông h√≥a</h3>
                            <div className="space-y-3">
                              <div className="flex items-center justify-between">
                                <div>
                                  <p className="font-medium text-gray-900">T·ª± ƒë·ªông ·ª©ng tuy·ªÉn</p>
                                  <p className="text-gray-600 text-sm">T·ª± ƒë·ªông ·ª©ng tuy·ªÉn v√†o c√°c c√¥ng vi·ªác ph√π h·ª£p</p>
                                </div>
                                <label className="relative inline-flex items-center cursor-pointer">
                                  <input type="checkbox" className="sr-only peer" />
                                  <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-green-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-green-600"></div>
                                </label>
                              </div>
                              
                              <div className="flex items-center justify-between">
                                <div>
                                  <p className="font-medium text-gray-900">T·ª± ƒë·ªông c·∫≠p nh·∫≠t CV</p>
                                  <p className="text-gray-600 text-sm">T·ª± ƒë·ªông c·∫≠p nh·∫≠t CV khi c√≥ th√¥ng tin m·ªõi</p>
                                </div>
                                <label className="relative inline-flex items-center cursor-pointer">
                                  <input type="checkbox" defaultChecked className="sr-only peer" />
                                  <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-green-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-green-600"></div>
                                </label>
                              </div>
                            </div>
                          </div>

                          <div className="border border-red-200 rounded-lg p-4">
                            <h3 className="text-lg font-medium text-red-900 mb-4">V√πng nguy hi·ªÉm</h3>
                            <div className="space-y-4">
                              <div>
                                <p className="font-medium text-red-900">X√≥a t√†i kho·∫£n</p>
                                <p className="text-red-600 text-sm mb-3">X√≥a vƒ©nh vi·ªÖn t√†i kho·∫£n v√† t·∫•t c·∫£ d·ªØ li·ªáu li√™n quan</p>
                                <button className="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                                  X√≥a t√†i kho·∫£n
                                </button>
                              </div>
                            </div>
                          </div>
                        </div>
                        
                        <div className="mt-6 flex justify-end">
                          <button className="bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-lg font-medium transition-colors">
                            L∆∞u c√†i ƒë·∫∑t
                          </button>
                        </div>
                      </div>
                    )}
                  </div>
                </div>
              </div>
            </div>
          </div>
        </main>
      </div>
    </div>
  );
};

export default SettingsPage;